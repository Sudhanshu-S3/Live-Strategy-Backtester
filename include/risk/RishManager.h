


#ifndef RISK_MANAGER_H
#define RISK_MANAGER_H

#include "../core/Portfolio.h"
#include "../data/DataTypes.h"
#include "../event/EventQueue.h"

class RiskManager {
public:
    /**
     * @brief Construct a new Risk Manager object
     * @param events Reference to the master event queue
     * @param portfolio Reference to the portfolio to check equity and positions
     * @param risk_per_trade_pct The percentage of total equity to risk per trade (e.g., 0.01 for 1%)
     */
    RiskManager(EventQueue& events, Portfolio& portfolio, double risk_per_trade_pct);

    /**
     * @brief Evaluates a SignalEvent against risk rules and creates an OrderEvent if it passes.
     * @param signal The SignalEvent generated by the Strategy.
     */
    void onSignal(const SignalEvent& signal);

private:
    EventQueue& events_;
    Portfolio& portfolio_;
    double risk_per_trade_pct_;
};

#endif // RISK_MANAGER_H