#ifndef DATA_TYPES_H
#define DATA_TYPES_H

#include <string>
#include <chrono>
using namespace std;


// Represents a single OHLCV data point for a specific symbol and time.
struct Bar {
    string symbol;
    chrono::system_clock::time_point timestamp;
    double open = 0.0;
    double high = 0.0;
    double low = 0.0;
    double close = 0.0;
    long long volume = 0;
};


struct Event {
    virtual ~Event() = default;
};

// Event pushed to the queue when the DataHandler provides a new Bar
struct MarketEvent : public Event {
    string symbol;
    chrono::system_clock::time_point timestamp;
};

// Event generated by a Strategy object to signal a trade
struct SignalEvent : public Event {
    string symbol;
    chrono::system_clock::time_point timestamp;
    string signal_type; // e.g., "LONG", "SHORT", "EXIT"
};

// Event sent to the ExecutionHandler to place an order
struct OrderEvent : public Event {
    string symbol;
    chrono::system_clock::time_point timestamp;
    string order_type;  // e.g., "MKT" (Market), "LMT" (Limit)
    string direction;   // "BUY" or "SELL"
    double quantity;
};

// Event received from the ExecutionHandler after an order is filled
struct FillEvent : public Event {
    string symbol;
    chrono::system_clock::time_point timestamp;
    string direction;   // "BUY" or "SELL"
    double quantity;
    double fill_price;
    double commission;
};

#endif // DATA_TYPES_H